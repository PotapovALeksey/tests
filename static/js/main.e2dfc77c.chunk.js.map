{"version":3,"sources":["redux/languageDescrPage/languageDescrPageActions.js","redux/testPage/testPageActions.js","redux/languageDescrPage/languageDescrPageCurrentQuestionReducer.js","redux/startPageRedux/startPageActions.js","redux/startPageRedux/startPageReducers.js","redux/startPageRedux/startPageSetLanguage.js","redux/rootReducer.js","redux/languageDescrPage/languageDescrPageReducer.js","redux/testPage/testPageReducers.js","redux/store.js","pages/StartPage/LanguageCard/LanguageCard.js","redux/startPageRedux/startPageSelectors.js","redux/testPage/testPageOperations.js","redux/testPage/testPageSelectors.js","pages/StartPage/StartPage.js","components/TestAnswer/TestAnswer.js","redux/startPageRedux/startPageOperations.js","redux/languageDescrPage/languageDescrPageSelectors.js","pages/LanguageDescrPage/StatisticBlock/TextBlockItem/TextBlockItem.js","pages/LanguageDescrPage/StatisticBlock/StatisticBlock.js","pages/LanguageDescrPage/InformationBlock/InformationBlock.js","pages/LanguageDescrPage/LanguageDescrPage.js","redux/languageDescrPage/languageDescrPageOperations.js","redux/languageDescrPage/languageDescrPageActionCreators.js","components/TestExplanation/TestExplanation.js","components/Shared/BoxShadow/BoxShadow.jsx","components/TestQuestion/TestQuestion.js","components/Shared/Button/Button.jsx","utils/Toggable.jsx","utils/Modal.jsx","components/Modal/EndTest/EndTest.jsx","components/TestControl/TestControl.js","components/NewTestImage/NewTestImage.js","pages/TestPage/TestPage.js","pages/TestPage/TestPageContainer.js","components/ResultDiagram/ResultDiagram.js","redux/allTestContainer/allTestContainerSelectors.js","components/AllTestContainer/AllTestContainer.js","redux/fakeReducer.js","pages/ResultPage/ResultPage.js","App.js","serviceWorker.js","index.js","pages/StartPage/StartPage.module.css","pages/StartPage/LanguageCard/LanguageCard.module.css","components/Modal/EndTest/EndTest.module.css","pages/TestPage/TestPage.module.css","components/ResultDiagram/ResultDiagram.module.css","components/TestExplanation/TestExplanation.module.css","components/TestControl/TestControl.module.css","pages/LanguageDescrPage/StatisticBlock/StatisticBlock.module.css","pages/LanguageDescrPage/InformationBlock/InformationBlock.module.css","pages/ResultPage/ResultPage.module.css","components/TestAnswer/TestAnswer.module.css","pages/LanguageDescrPage/LanguageDescrPage.module.css","pages/LanguageDescrPage/StatisticBlock/TextBlockItem/TextBlockItem.module.css","components/TestQuestion/TestQuestion.module.css","components/AllTestContainer/AllTestContainer.module.css","assets/img/cat/happyCat1.jpg","assets/img/cat/happyCat2.png","assets/img/cat/happyCat3.png","assets/img/cat/pensiveСat1.jpg","assets/img/cat/pensiveCat2.png","components/Shared/BoxShadow/BoxShadow.module.css","components/Shared/Button/Button.module.css","components/NewTestImage/NewTestImage.module.css"],"names":["ActionType","resetUserAnswer","type","payload","reset","fetchResultAnswerSuccess","resultAnswer","fetchFinalResult","finalResult","combineReducers","currentQuestion","state","arguments","length","undefined","_ref","ActionTypeTestPage","test","TestType","loading","error","_ref3","languages","languageReducer","rootReducer","currentLanguageId","startPageSetLanguage","userId","currentQuestionReducer","testTime","startTime","endTime","_ref2","time","Object","objectSpread","languagesInfoArr","startPageReducer","userAnswer","questionNumber","resultAnswered","nextQuestion","_ref4","persistConfig","key","storage","store","createStore","persistReducer","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","LanguageCard","image","title","countQuestions","languageId","_ref$setLanguageReduc","setLanguageReducer","react_default","a","createElement","className","style","card","react_router_dom","link","onClick","to","shadow","wrapper","height","width","logo","src","alt","emptyImg","lang","questions","defaultProps","connect","dispatch","getPosts","axios","defaults","baseURL","finishTest","post","concat","then","catch","getCurrentQuestion","getResultAnswer","getUserId","StartPage","componentDidMount","_this","props","fetchLang","_callee","regenerator_default","wrap","_context","prev","next","fetchLanguages","res","addNotification","stop","toastManager","add","appearance","autoDismiss","pauseOnHover","_this$props","this","react","section","sectionAbout","sectionText","react_media","query","minWidth","matches","blockquote","lduo","autor","organization","href","rel","target","loader","react_loader_spinner_default","color","langList","map","StartPage_LanguageCard_LanguageCard","assign","Component","labelClassNames","disabled","checked","mapDispatchToPropps","asyncToGenerator","mark","response","get","sent","data","abrupt","t0","_x","apply","languageSelectors","withToastManager","getCurrentLanguageId","getLanguageById","id","getLanguageArr","find","item","TextBlockItem","itemName","info","styles","textBlock_item","textBlock_itemNumber","changeDate","date","Date","parse","toLocaleDateString","StatisticBlock","questionCount","questionPull","createdAt","updatedAt","firstBlock","firstBlockImage","firstBlockTextInfo","StatisticBlock_TextBlockItem_TextBlockItem","btnGoBack","InformationBlock","description","onStart","secondBlock","secondBlockTitle","dangerouslySetInnerHTML","__html","secondBlockDescription","btnStartTest","LanguageDescrPage","handleBtnBack","e","history","preventDefault","push","handleBtnStart","setStartTime","fetchTest","now","_this$props2","languageInfo","_this$props2$language","pullQuestions","Fragment","languageDescrPageContainer","LanguageDescrPage_StatisticBlock_StatisticBlock","LanguageDescrPage_InformationBlock_InformationBlock","languageDescrPageSelectors","languageDescrPageOperations","happyCatArray","happyCat1","happyCat2","happyCat3","pensiveCatArray","pensiveСat1","pensiveСat2","getRandomInt","max","Math","floor","random","cx","classNames","bind","TestAnswer","onClickAnswer","onChangeUserAnswer","onClickSkipQuestion","container","wrapperImgInput","inputWrapper","question","index","currentIndex","answerCorrectly","label","labelCorrect","rightAnswer","labelIncorrect","_id","htmlFor","input","name","data-number","answerNumber","onChange","defaultChecked","answerText","questionText","img","tabletContainerButton","buttonContainer","buttonConfirm","buttonSkip","mobileContainerButton","TestExplanation","onClickNextQuestion","innerContainer","text","button","BoxShadow","children","boxShadow","shadowName","css","TestQuestion","Shared_BoxShadow_BoxShadow","paper","Button","_ref$type","variant","handleClick","rest","objectWithoutProperties","Toggable","isToggle","handleToggle","setState","toggle","React","modalRoot","document","getElementById","Modal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","el","appendChild","removeChild","ReactDOM","createPortal","mapDispatchToProps","handleFinishTest","selectors","endTest","continueTest","modal","controls","Shared_Button_Button","btn","data-redirect","withRouter","current","utils_Toggable","dataset","redirect","headerTest","orderQuestion","utils_Modal","EndTest_EndTest","NewTestImage","desktopImage","mobileImage","media","srcSet","TestPage","userAnswerNumber","languageTitle","scrollTop","window","scrollTo","left","top","behavior","Number","number","_this$props$currentQu","questionAnswer","questionId","onChangeAnswer","_this$props$currentQu2","_this$state","fetchResultAnswer","rewriteCurrentQuestion","resetFields","_this$props$currentQu3","questionSkip","fetchSkipTheQuestion","_this$state2","imageMobile","testPageContainer","components_TestControl_TestControl","allQuestionsCount","components_TestQuestion_TestQuestion","components_NewTestImage_NewTestImage","components_TestAnswer_TestAnswer","answers","components_TestExplanation_TestExplanation","questionExplanation","explanation","bigBackground","background","getState","userID","_response$data","newNextQuestion","result","fetchNextQuestionSuccess","fetchResultAnswerError","TestPageActions","_response$data2","fetchSkipTheQuestionError","TestPageSelectors","ResultDiagramm","percentage","rightAnswered","totalTime","rightAnsweredInPercentage","head","diagramm","react_minimal_pie_chart_dist_default","value","lineWidth","digrammPercentage","round","wishes","statistics","bracket","innerNumber","getQuestions","getLanguageTitle","AllTestContainer","i","userAnswerCorrectly","span","code","allTestContainerSelectors","getAllQuestionsCount","getUserRightAnswered","userRightAnswered","getUserRightAnsweredInPercentage","userRightAnsweredInPercentage","getFinalRsult","ResultPage","setEndTime","delta","moment","format","_this$props3","ResultDiagram","getMinutes","components_AllTestContainer_AllTestContainer","relative","react_router","selector","App","dist","placement","exact","path","component","Boolean","location","hostname","match","render","es","integration_react","basename","src_App","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p","shadowDepth1","shadowDepth2","shadowDepth3","shadowDepth4","shadowDepth5","shadowDepth6","shadowDepth7","shadowDepth8","shadowDepth9","shadowDepth10","shadowDepth11","shadowDepth12","shadowDepth13","shadowDepth14","shadowDepth15","shadowDepth16","shadowDepth17","shadowDepth18","shadowDepth19","shadowDepth20","shadowDepth21","shadowDepth22","shadowDepth23","shadowDepth24","simple","contained","outlined"],"mappings":"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","file":"static/js/main.e2dfc77c.chunk.js","sourcesContent":["export const ActionType = {\n  FETCH_TEST_START: 'FETCH_TEST_START',\n  FETCH_TEST_SUCCESS: 'FETCH_TEST_SUCCESS',\n  FETCH_TEST_ERROR: 'FETCH_TEST_ERROR',\n  TIME_START: 'TIME_START',\n  TIME_END: 'TIME_END',\n};\nexport const llll = () => null;\n","export const ActionType = {\n  REWRITE_CURRENTQUESTION: 'REWRITE_CURRENTQUESTION',\n  CHANGE_USER_ANSWER: 'CHANGE_USER_ANSWER',\n  CHANGE_USER_ANSWER_QUESTION_NUMBER: 'CHANGE_USER_ANSWER_QUESTION_NUMBER',\n  RESET_USER_ANSWER: 'RESET_USER_ANSWER',\n  FETCH_RESULT_ANSWER_START: 'FETCH_RESULT_ANSWER_START',\n  FETCH_RESULT_ANSWER_SUCCESS: 'FETCH_RESULT_ANSWER_SUCCESS',\n  FETCH_RESULT_ANSWER_ERROR: 'FETCH_RESULT_ANSWER_ERROR',\n  RESET_RESULT_ANSWER: 'RESET_RESULT_ANSWER',\n  FETCH_NEXT_QUESTION_SUCCESS: 'FETCH_NEXT_QUESTION_SUCCESS',\n  RESET_NEXT_QUESTION: 'RESET_NEXT_QUESTION',\n  FETCH_SKIP_QUESTION_START: 'FETCH_SKIP_QUESTION_START',\n  FETCH_SKIP_QUESTION_SUCCESS: 'FETCH_SKIP_QUESTION_SUCCESS',\n  FETCH_SKIP_QUESTION_ERROR: 'FETCH_SKIP_ERROR',\n  FETCH_FINAL_RESULT: 'FETCH_FINAL_RESULT',\n  FINISH_TEST_START: 'FINISH_TEST_START',\n  FINISH_TEST_SUCCESS: 'FINISH_TEST_SUCCESS',\n  FINISH_TEST_ERROR: 'FINISH_TEST_ERROR',\n};\n\n/*\n * finishTest\n */\nexport const finishTestStart = () => ({\n  type: ActionType.FINISH_TEST_START,\n});\nexport const finishTestSuccess = () => ({\n  type: ActionType.FINISH_TEST_SUCCESS,\n});\nexport const finishTestError = () => ({\n  type: ActionType.FINISH_TEST_ERROR,\n});\n\n/* rewriteCurrentQuestion */\n\nexport const rewriteCurrentQuestion = test => ({\n  type: ActionType.REWRITE_CURRENTQUESTION,\n  payload: {\n    test,\n  },\n});\n\n/* userAnswer */\n\nexport const changeUserAnswer = userAnswer => ({\n  type: ActionType.CHANGE_USER_ANSWER,\n  payload: {\n    userAnswer,\n  },\n});\n\nexport const resetUserAnswer = () => ({\n  type: ActionType.RESET_USER_ANSWER,\n  payload: {\n    reset: null,\n  },\n});\n\nexport const changeUserAnswerQuestionNumber = questionNumber => ({\n  type: ActionType.CHANGE_USER_ANSWER_QUESTION_NUMBER,\n  payload: {\n    questionNumber,\n  },\n});\n\n/* resultAnswer */\n\nexport const fetchResultAnswerStart = () => ({\n  type: ActionType.FETCH_RESULT_ANSWER_START,\n});\n\nexport const fetchResultAnswerSuccess = resultAnswer => ({\n  type: ActionType.FETCH_RESULT_ANSWER_SUCCESS,\n  payload: {\n    resultAnswer,\n  },\n});\n\nexport const fetchResultAnswerError = error => ({\n  type: ActionType.FETCH_RESULT_ANSWER_ERROR,\n  payload: {\n    error,\n  },\n});\n\nexport const resetResultAnswer = () => ({\n  type: ActionType.RESET_RESULT_ANSWER,\n  payload: {\n    reset: false,\n  },\n});\n\n/* nextQuestion */\n\nexport const fetchNextQuestionSuccess = nextQuestion => ({\n  type: ActionType.FETCH_NEXT_QUESTION_SUCCESS,\n  payload: {\n    nextQuestion,\n  },\n});\n\nexport const resetNextQuestion = () => ({\n  type: ActionType.RESET_NEXT_QUESTION,\n  payload: {\n    reset: null,\n  },\n});\n\n/* Action skip the question */\n\nexport const fetchSkipTheQuestionStart = () => ({\n  type: ActionType.FETCH_SKIP_QUESTION_START,\n});\n\nexport const fetchSkipTheQuestionSuccess = test => ({\n  type: ActionType.FETCH_SKIP_QUESTION_SUCCESS,\n  payload: {\n    test,\n  },\n});\n\nexport const fetchSkipTheQuestionError = error => ({\n  type: ActionType.FETCH_SKIP_QUESTION_ERROR,\n  payload: {\n    error,\n  },\n});\n\nexport const fetchFinalResult = finalResult => ({\n  type: ActionType.FETCH_FINAL_RESULT,\n  payload: {\n    finalResult,\n  },\n});\n","import { combineReducers } from 'redux';\nimport { ActionType } from './languageDescrPageActions';\nimport {\n  ActionType as ActionTypeTestPage,\n  ActionType as TestType,\n} from '../testPage/testPageActions';\n\nconst currentQuestionReducer = (state = null, { type, payload }) => {\n  switch (type) {\n    case ActionType.FETCH_TEST_SUCCESS:\n      return payload.test;\n    case ActionTypeTestPage.REWRITE_CURRENTQUESTION:\n      return payload.test;\n    case ActionTypeTestPage.FETCH_SKIP_QUESTION_SUCCESS:\n      return payload.test;\n    case TestType.FINISH_TEST_SUCCESS:\n      return null;\n    default:\n      return state;\n  }\n};\nconst loadingReducer = (state = false, { type }) => {\n  switch (type) {\n    case ActionType.FETCH_TEST_START:\n      return true;\n\n    case ActionType.FETCH_TEST_SUCCESS:\n    case ActionType.FETCH_TEST_ERROR:\n    case TestType.FINISH_TEST_SUCCESS:\n      return false;\n\n    default:\n      return state;\n  }\n};\n\nconst errorReducer = (state = null, { type, payload }) => {\n  switch (type) {\n    case ActionType.FETCH_TEST_START:\n    case ActionType.FETCH_TEST_SUCCESS:\n    case TestType.FINISH_TEST_SUCCESS:\n      return null;\n\n    case ActionType.FETCH_TEST_ERROR:\n      return payload.error;\n\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  currentQuestion: currentQuestionReducer,\n  loading: loadingReducer,\n  error: errorReducer,\n});\n","export const ActionType = {\n  FETCH_LANGUAGES_START: 'FETCH_LANGUAGES_START',\n  FETCH_LANGUAGES_SUCCESS: 'FETCH_LANGUAGES_SUCCESS',\n  FETCH_LANGUAGES_ERROR: 'FETCH_LANGUAGES_ERROR',\n  SET_LANGUAGE: 'SET_LANGUAGE',\n  COME_BACK_TO_STARTPAGE: 'COME_BACK_TO_STARTPAGE',\n};\n\nexport const fetchLanguageStart = () => ({\n  type: ActionType.FETCH_LANGUAGES_START,\n});\n\nexport const fetchLanguageSuccess = languages => ({\n  type: ActionType.FETCH_LANGUAGES_SUCCESS,\n  payload: languages,\n});\n\nexport const fetchLanguageError = error => ({\n  type: ActionType.FETCH_LANGUAGES_ERROR,\n  payload: error,\n});\n\nexport const setLanguage = id => ({\n  type: ActionType.SET_LANGUAGE,\n  payload: id,\n});\nexport const onComeBack = currentLanguageId => ({\n  type: ActionType.COME_BACK_TO_STARTPAGE,\n  payload: {\n    currentLanguageId,\n  },\n});\n","import { combineReducers } from 'redux';\nimport { ActionType } from './startPageActions';\nimport { ActionType as TestType } from '../testPage/testPageActions';\n\nconst languageReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case ActionType.FETCH_LANGUAGES_SUCCESS:\n      return payload;\n    case TestType.FINISH_TEST_SUCCESS:\n      return [];\n    default:\n      return state;\n  }\n};\n\nconst loadingReducer = (state = false, { type }) => {\n  switch (type) {\n    case ActionType.FETCH_LANGUAGES_START:\n      return true;\n\n    case ActionType.FETCH_LANGUAGES_SUCCESS:\n    case ActionType.FETCH_LANGUAGES_ERROR:\n      return false;\n\n    case TestType.FINISH_TEST_SUCCESS:\n      return false;\n    default:\n      return state;\n  }\n};\n\nconst errorReducer = (state = null, { type, payload }) => {\n  switch (type) {\n    case ActionType.FETCH_LANGUAGES_START:\n    case ActionType.FETCH_LANGUAGES_SUCCESS:\n      return null;\n\n    case ActionType.FETCH_LANGUAGES_ERROR:\n      return payload;\n\n    case TestType.FINISH_TEST_SUCCESS:\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  languages: languageReducer,\n  loading: loadingReducer,\n  error: errorReducer,\n});\n","import { ActionType } from './startPageActions';\nimport { ActionType as TestType } from '../testPage/testPageActions';\n\nconst languageReducer = (state = null, { type, payload }) => {\n  switch (type) {\n    case ActionType.SET_LANGUAGE:\n      return payload;\n    case ActionType.COME_BACK_TO_STARTPAGE:\n      return '';\n    case TestType.FINISH_TEST_SUCCESS:\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default languageReducer;\n","import { combineReducers } from 'redux';\nimport {\n  userIdReducer,\n  timeStartReducer,\n} from './languageDescrPage/languageDescrPageReducer';\nimport currentQuestionReducer from './languageDescrPage/languageDescrPageCurrentQuestionReducer';\nimport startPageReducer from './startPageRedux/startPageReducers';\nimport startPageSetLanguage from './startPageRedux/startPageSetLanguage';\nimport {\n  userAnswerReducer,\n  resultAnsweredReducer,\n  nextQuestionAnswerReducer,\n  finalResultReducer,\n} from './testPage/testPageReducers';\n\n// тут импортируем редюсеры\n\nconst rootReducer = combineReducers({\n  currentLanguageId: startPageSetLanguage,\n  userId: userIdReducer,\n  currentQuestion: currentQuestionReducer,\n  testTime: timeStartReducer,\n  languagesInfoArr: startPageReducer,\n  userAnswer: userAnswerReducer,\n  resultAnswered: resultAnsweredReducer,\n  nextQuestion: nextQuestionAnswerReducer,\n  finalResult: finalResultReducer,\n});\n\nexport default rootReducer;\n","import { ActionType } from './languageDescrPageActions';\nimport { ActionType as TestType } from '../testPage/testPageActions';\n\nexport const userIdReducer = (state = '', { type, payload }) => {\n  switch (type) {\n    case ActionType.FETCH_TEST_SUCCESS:\n      return payload.test.userId;\n    case TestType.FINISH_TEST_SUCCESS:\n      return '';\n    default:\n      return state;\n  }\n};\nexport const timeStartReducer = (\n  state = {\n    startTime: null,\n    endTime: null,\n  },\n  { type, payload },\n) => {\n  switch (type) {\n    case ActionType.TIME_START:\n      return {\n        startTime: payload.time,\n      };\n    case ActionType.TIME_END:\n      return { ...state, endTime: payload.time };\n\n    case TestType.FINISH_TEST_SUCCESS:\n      return {\n        startTime: null,\n        endTime: null,\n      };\n    default:\n      return state;\n  }\n};\n","// import { combineReducers } from 'redux';\nimport { ActionType } from './testPageActions';\n\n// export const loadingReducer = (state = false, { type }) => {\n//   switch (type) {\n//     case ActionType.FETCH_CURRENTQUESTION_START:\n//     case ActionType.PUSH_USER_ANSWER_START:\n//       return true;\n//     case ActionType.FETCH_CURRENTQUESTION_SUCCESS:\n//     case ActionType.PUSH_USER_ANSWER_SUCCESS:\n//       return false;\n//     default:\n//       return state;\n//   }\n// };\n\n// export const errorReducer = (state = null, { type, payload }) => {\n//   switch (type) {\n//     case ActionType.FETCH_CURRENTQUESTION_ERROR:\n//     case ActionType.PUSH_USER_ANSWER_ERROR:\n//       return payload.error;\n//     case ActionType.FETCH_CURRENTQUESTION_START:\n//     case ActionType.PUSH_USER_ANSWER_START:\n//       return null;\n//     default:\n//       return state;\n//   }\n// };\n\nexport const userAnswerReducer = (state = {}, { type, payload }) => {\n  switch (type) {\n    case ActionType.CHANGE_USER_ANSWER:\n      return payload.userAnswer;\n    case ActionType.CHANGE_USER_ANSWER_QUESTION_NUMBER:\n      return payload.questionNumber;\n    case ActionType.RESET_USER_ANSWER:\n      return payload.reset;\n    case ActionType.FINISH_TEST_SUCCESS:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const resultAnsweredReducer = (state = false, { type, payload }) => {\n  switch (type) {\n    case ActionType.FETCH_RESULT_ANSWER_SUCCESS:\n      return payload.resultAnswer;\n    case ActionType.RESET_RESULT_ANSWER:\n      return payload.reset;\n    case ActionType.FINISH_TEST_SUCCESS:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport const nextQuestionAnswerReducer = (state = {}, { type, payload }) => {\n  switch (type) {\n    case ActionType.FETCH_NEXT_QUESTION_SUCCESS:\n      return payload.nextQuestion;\n    case ActionType.RESET_NEXT_QUESTION:\n      return payload.reset;\n    case ActionType.FINISH_TEST_SUCCESS:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const finalResultReducer = (state = false, { type, payload }) => {\n  switch (type) {\n    case ActionType.FETCH_FINAL_RESULT:\n      return payload.finalResult;\n    case ActionType.FINISH_TEST_SUCCESS:\n      return false;\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from './rootReducer';\n\nconst persistConfig = {\n  key: 'test',\n  storage,\n};\n\nexport const store = createStore(\n  persistReducer(persistConfig, rootReducer),\n  composeWithDevTools(applyMiddleware(thunk)),\n);\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport style from './LanguageCard.module.css';\nimport { setLanguage } from '../../../redux/startPageRedux/startPageActions';\n\nconst LanguageCard = ({\n  image,\n  title,\n  countQuestions,\n  languageId,\n  setLanguageReducer = () => null,\n}) => (\n  <li className={style.card}>\n    <Link\n      className={style.link}\n      onClick={() => setLanguageReducer(languageId)}\n      to=\"/language_descr\"\n    />\n    <div className={style.shadow} />\n    <div className={style.wrapper}>\n      {image.length ? (\n        <img\n          height=\"85\"\n          width=\"auto\"\n          className={style.logo}\n          src={image}\n          alt=\"logoLang\"\n        />\n      ) : (\n        <div className={style.emptyImg} />\n      )}\n\n      <p className={style.lang}>{title}</p>\n      <p className={style.questions}>{countQuestions} вопросов</p>\n    </div>\n  </li>\n);\n\nLanguageCard.defaultProps = {\n  image: '',\n};\n\nLanguageCard.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  countQuestions: PropTypes.number.isRequired,\n  languageId: PropTypes.string.isRequired,\n  setLanguageReducer: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToPropps = dispatch => ({\n  setLanguageReducer: languageId => dispatch(setLanguage(languageId)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToPropps,\n)(LanguageCard);\n","export const getPosts = state => state.languagesInfoArr.languages;\n\nexport const loading = state => state.languagesInfoArr.loading;\n\nexport const error = state => state.languagesInfoArr.error;\n","/* eslint-disable */\nimport axios from 'axios';\nimport {\n  fetchResultAnswerStart,\n  fetchResultAnswerSuccess,\n  fetchResultAnswerError,\n  fetchNextQuestionSuccess,\n  fetchSkipTheQuestionError,\n  fetchSkipTheQuestionStart,\n  fetchSkipTheQuestionSuccess,\n  fetchFinalResult,\n  finishTestError,\n  finishTestStart,\n  finishTestSuccess,\n} from './testPageActions';\n\naxios.defaults.baseURL = 'https://test.goit.co.ua/api';\nexport const finishTest = userId => dispatch => {\n  dispatch(finishTestStart());\n  axios\n    .post(`/tests/cancel/${userId}`)\n    .then(() => {\n      dispatch(finishTestSuccess());\n    })\n    .catch(error => {\n      dispatch(finishTestError(error));\n    });\n};\nexport const fetchResultAnswer = (userID, userAnswer) => dispatch => {\n  dispatch(fetchResultAnswerStart());\n\n  axios\n    .post(`/answer/${userID}`, userAnswer)\n    .then(response => {\n      if (!response.data.finalResult) {\n        const {\n          userId,\n          languageTitle,\n          questionNumber,\n          allQuestionsCount,\n          nextQuestion,\n        } = response.data;\n\n        const newNextQuestion = {\n          userId,\n          languageTitle,\n          questionNumber,\n          allQuestionsCount,\n          question: nextQuestion,\n        };\n        dispatch(fetchResultAnswerSuccess(response.data.result));\n        dispatch(fetchNextQuestionSuccess(newNextQuestion));\n        return;\n      }\n      dispatch(fetchResultAnswerSuccess(response.data.result));\n      dispatch(fetchFinalResult(response.data));\n    })\n    .catch(error => dispatch(fetchResultAnswerError(error)));\n};\n\nexport const fetchSkipTheQuestion = (userID, question) => dispatch => {\n  dispatch(fetchSkipTheQuestionStart());\n\n  axios\n    .post(`/answer/skip/${userID}`, question)\n    .then(response => {\n      if (!response.data.finalResult) {\n        const { questionNumber, allQuestionsCount } = response.data;\n        const question = response.data.question || response.data.nextQuestion;\n        const newNextQuestion = {\n          questionNumber,\n          allQuestionsCount,\n          question,\n        };\n\n        return dispatch(fetchSkipTheQuestionSuccess(newNextQuestion));\n      }\n\n      dispatch(fetchFinalResult(response.data));\n    })\n    .catch(error => dispatch(fetchSkipTheQuestionError(error)));\n};\n","export const getCurrentQuestion = state =>\n  state.currentQuestion.currentQuestion;\n\nexport const getResultAnswer = state => state.resultAnswered;\n\nexport const getUserId = state => state.userId;\n\nexport const finalResult = state => state.finalResult;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Media from 'react-media';\nimport Loader from 'react-loader-spinner';\nimport { withToastManager } from 'react-toast-notifications';\nimport style from './StartPage.module.css';\nimport CardLanguage from './LanguageCard/LanguageCard';\nimport * as startPageOperations from '../../redux/startPageRedux/startPageOperations';\nimport * as languageSelectors from '../../redux/startPageRedux/startPageSelectors';\nimport { finishTest } from '../../redux/testPage/testPageOperations';\nimport { getUserId } from '../../redux/testPage/testPageSelectors';\n\nclass StartPage extends Component {\n  componentDidMount = () => {\n    if (this.props.userId) this.props.finishTest(this.props.userId);\n    this.fetchLang();\n  };\n\n  fetchLang = async () => {\n    const lang = this.props.fetchLanguages();\n    lang.then(res => {\n      if (res) {\n        this.addNotification('Что-то пошло не так, перезагрузи страницу');\n      }\n    });\n  };\n\n  addNotification = error => {\n    const { toastManager } = this.props;\n    toastManager.add(error, {\n      appearance: 'error',\n      autoDismiss: true,\n      pauseOnHover: true,\n    });\n  };\n\n  render() {\n    const { loading, languages } = this.props;\n    return (\n      <Fragment>\n        <section className={style.section}>\n          <div className={style.sectionAbout}>\n            <div className={style.sectionText}>\n              <Media query={{ minWidth: 768 }}>\n                {matches =>\n                  matches && (\n                    <Fragment>\n                      <blockquote className={style.blockquote}>\n                        <span className={style.lduo}>&ldquo;</span>\n                        <br />Я не провалил тест, я просто нашел 100 способов\n                        сделать его неправильно\n                      </blockquote>\n                      <p className={style.autor}>Бенджамин Франклин</p>\n                    </Fragment>\n                  )\n                }\n              </Media>\n              <p className={style.organization}>\n                [ Онлайн тесты для студентов{' '}\n                <a\n                  href=\"https://goiteens.ua/\"\n                  rel=\"noopener noreferrer\"\n                  target=\"_blank\"\n                >\n                  GoITeens\n                </a>{' '}\n                ]\n              </p>\n            </div>\n          </div>\n          {loading && (\n            <div className={style.loader}>\n              <Loader type=\"Circles\" color=\"#00BFFF\" height=\"100\" width=\"100\" />\n            </div>\n          )}\n          {languages.length > 0 && (\n            <ul className={style.langList}>\n              {languages.map(lang => (\n                <CardLanguage key={lang.languageId} {...lang} />\n              ))}\n            </ul>\n          )}\n        </section>\n      </Fragment>\n    );\n  }\n}\n\nStartPage.defaultProps = {\n  error: null,\n  userId: null,\n};\n\nStartPage.propTypes = {\n  fetchLanguages: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  // eslint-disable-next-line\n  languages: PropTypes.array.isRequired,\n  error: PropTypes.string,\n  userId: PropTypes.string,\n  finishTest: PropTypes.func.isRequired,\n  toastManager: PropTypes.shape({\n    add: PropTypes.func,\n    remove: PropTypes.func,\n    toasts: PropTypes.array,\n  }).isRequired,\n};\n\nconst mapStateToProps = state => ({\n  languages: languageSelectors.getPosts(state),\n  loading: languageSelectors.loading(state),\n  error: languageSelectors.error(state),\n  userId: getUserId(state),\n});\n\nconst mapDispatchToPropps = {\n  fetchLanguages: startPageOperations.fetchLanguages,\n  finishTest,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToPropps,\n)(withToastManager(StartPage));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames/bind';\nimport styles from './TestAnswer.module.css';\nimport happyCat1 from '../../assets/img/cat/happyCat1.jpg';\nimport happyCat2 from '../../assets/img/cat/happyCat2.png';\nimport happyCat3 from '../../assets/img/cat/happyCat3.png';\nimport pensiveСat1 from '../../assets/img/cat/pensiveСat1.jpg';\nimport pensiveСat2 from '../../assets/img/cat/pensiveCat2.png';\n\nconst happyCatArray = [happyCat1, happyCat2, happyCat3];\nconst pensiveCatArray = [pensiveСat1, pensiveСat2];\n\nconst getRandomInt = max => Math.floor(Math.random() * max);\n\nconst cx = classNames.bind(styles);\nlet labelClassNames;\nlet disabled;\nlet checked;\n\nconst TestAnswer = ({\n  questions,\n  resultAnswer,\n  onClickAnswer,\n  onChangeUserAnswer,\n  onClickSkipQuestion,\n}) => (\n  <>\n    <div className={styles.container}>\n      <div className={styles.wrapperImgInput}>\n        <div className={styles.inputWrapper}>\n          {questions.map((question, index) => {\n            if (resultAnswer) {\n              const currentIndex = index + 1;\n              labelClassNames = resultAnswer.answerCorrectly\n                ? cx({\n                    label: true,\n                    labelCorrect: currentIndex === resultAnswer.rightAnswer,\n                  })\n                : cx({\n                    label: true,\n                    labelIncorrect: currentIndex === resultAnswer.userAnswer,\n                    labelCorrect: currentIndex === resultAnswer.rightAnswer,\n                  });\n              checked = currentIndex === resultAnswer.userAnswer;\n              disabled = true;\n            } else {\n              labelClassNames = cx({\n                label: true,\n              });\n              disabled = false;\n              checked = false;\n            }\n\n            return (\n              <label\n                key={question._id}\n                htmlFor={question._id}\n                className={labelClassNames}\n              >\n                {resultAnswer ? (\n                  <input\n                    disabled={disabled}\n                    id={question._id}\n                    className={styles.input}\n                    name=\"answer\"\n                    type=\"radio\"\n                    data-number={question.answerNumber}\n                    onChange={onChangeUserAnswer}\n                    defaultChecked={checked}\n                  />\n                ) : (\n                  <input\n                    disabled={disabled}\n                    id={question._id}\n                    className={styles.input}\n                    name=\"answer\"\n                    type=\"radio\"\n                    data-number={question.answerNumber}\n                    onChange={onChangeUserAnswer}\n                  />\n                )}\n\n                <span\n                  dangerouslySetInnerHTML={{ __html: question.answerText }}\n                  className={styles.questionText}\n                />\n              </label>\n            );\n          })}\n        </div>\n        {resultAnswer &&\n          (resultAnswer.answerCorrectly ? (\n            <img\n              className={styles.img}\n              alt=\"cat\"\n              src={happyCatArray[getRandomInt(3)]}\n            />\n          ) : (\n            <img\n              className={styles.img}\n              alt=\"cat\"\n              src={pensiveCatArray[getRandomInt(2)]}\n            />\n          ))}\n      </div>\n\n      {!resultAnswer && (\n        <div className={styles.tabletContainerButton}>\n          <div className={styles.buttonContainer}>\n            <button\n              onClick={onClickAnswer}\n              type=\"submit\"\n              className={styles.buttonConfirm}\n            >\n              Ответить\n            </button>\n            <button\n              onClick={onClickSkipQuestion}\n              type=\"submit\"\n              className={styles.buttonSkip}\n            >\n              Пропустить\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n    {!resultAnswer && (\n      <div className={styles.mobileContainerButton}>\n        <div className={styles.buttonContainer}>\n          <button\n            onClick={onClickAnswer}\n            type=\"submit\"\n            className={styles.buttonConfirm}\n          >\n            Ответить\n          </button>\n          <button\n            onClick={onClickSkipQuestion}\n            type=\"submit\"\n            className={styles.buttonSkip}\n          >\n            Пропустить\n          </button>\n        </div>\n      </div>\n    )}\n  </>\n);\n\nTestAnswer.propTypes = {\n  questions: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  resultAnswer: PropTypes.oneOfType([\n    PropTypes.shape({\n      rightAnswer: PropTypes.number,\n      userAnswer: PropTypes.number,\n      userAnswerCorrectly: PropTypes.bool,\n      questionExplanation: PropTypes.string,\n    }),\n    PropTypes.bool,\n  ]).isRequired,\n  onClickAnswer: PropTypes.func,\n  onChangeUserAnswer: PropTypes.func,\n  onClickSkipQuestion: PropTypes.func,\n};\n\nTestAnswer.defaultProps = {\n  onClickAnswer: () => null,\n  onChangeUserAnswer: () => null,\n  onClickSkipQuestion: () => null,\n};\n\nexport default TestAnswer;\n","import axios from 'axios';\nimport {\n  fetchLanguageStart,\n  fetchLanguageSuccess,\n  fetchLanguageError,\n} from './startPageActions';\n\n// eslint-disable-next-line\nexport const fetchLanguages = () => {\n  return async dispatch => {\n    try {\n      dispatch(fetchLanguageStart());\n      const response = await axios.get('https://test.goit.co.ua/api/tests');\n      dispatch(fetchLanguageSuccess(response.data.languages));\n      return null;\n    } catch (error) {\n      dispatch(fetchLanguageError(error));\n      return error;\n    }\n  };\n};\n","export const getCurrentLanguageId = state => state.currentLanguageId;\nexport const getLanguageArr = state => state.languagesInfoArr.languages;\n\nexport const getLanguageById = state => {\n  const id = getCurrentLanguageId(state);\n  const languages = getLanguageArr(state);\n  return languages.find(item => item.languageId === id);\n};\nexport const loading = state => state.currentQuestion.loading;\n\nexport const error = state => state.currentQuestion.error;\n\nexport const startTime = state => state.testTime.startTime;\nexport const endTime = state => state.testTime.endTime;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TextBlockItem.module.css';\n\nconst TextBlockItem = ({ itemName, info }) => (\n  <div className={styles.textBlock_item}>\n    <p>{itemName}</p>\n    <span />\n    <p className={styles.textBlock_itemNumber}>{info}</p>\n  </div>\n);\nTextBlockItem.propTypes = {\n  itemName: PropTypes.string.isRequired,\n  info: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n};\nexport default TextBlockItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './StatisticBlock.module.css';\nimport TextBlockItem from './TextBlockItem/TextBlockItem';\n\nconst changeDate = date => {\n  const infoDate = new Date(Date.parse(date));\n  return infoDate.toLocaleDateString();\n};\nconst StatisticBlock = ({\n  logo,\n  questionCount,\n  questionPull,\n  createdAt,\n  updatedAt,\n  onClick,\n}) => (\n  <div className={styles.firstBlock}>\n    <img className={styles.firstBlockImage} src={logo} alt=\"languageLogo\" />\n    <div className={styles.firstBlockTextInfo}>\n      <TextBlockItem itemName=\"Количество вопросов\" info={questionCount} />\n      <TextBlockItem itemName=\"Пул вопросов\" info={questionPull} />\n      <TextBlockItem itemName=\"Создан\" info={changeDate(createdAt)} />\n      <TextBlockItem itemName=\"Обновлен\" info={changeDate(updatedAt)} />\n      <button className={styles.btnGoBack} type=\"button\" onClick={onClick}>\n        Вернуться к списку тестов\n      </button>\n    </div>\n  </div>\n);\n\nStatisticBlock.propTypes = {\n  logo: PropTypes.string.isRequired,\n  questionCount: PropTypes.number.isRequired,\n  questionPull: PropTypes.number.isRequired,\n  createdAt: PropTypes.string.isRequired,\n  updatedAt: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default StatisticBlock;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Media from 'react-media';\nimport styles from './InformationBlock.module.css';\n\nconst InformationBlock = ({ title, description, onStart }) => (\n  <div className={styles.secondBlock}>\n    <Media query=\"(min-width: 768px)\">\n      {matches =>\n        matches && (\n          <Fragment>\n            <h2 className={styles.secondBlockTitle}>{title}</h2>\n            <p\n              dangerouslySetInnerHTML={{ __html: description }}\n              className={styles.secondBlockDescription}\n            />\n          </Fragment>\n        )\n      }\n    </Media>\n    <button className={styles.btnStartTest} type=\"button\" onClick={onStart}>\n      Начать тест\n    </button>\n  </div>\n);\nInformationBlock.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  onStart: PropTypes.func.isRequired,\n};\nexport default InformationBlock;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withToastManager } from 'react-toast-notifications';\nimport Loader from 'react-loader-spinner';\nimport * as languageDescrPageSelectors from '../../redux/languageDescrPage/languageDescrPageSelectors';\nimport * as languageDescrPageActionCreators from '../../redux/languageDescrPage/languageDescrPageActionCreators';\nimport * as languageDescrPageOperations from '../../redux/languageDescrPage/languageDescrPageOperations';\nimport styles from './LanguageDescrPage.module.css';\nimport StatisticBlock from './StatisticBlock/StatisticBlock';\nimport InformationBlock from './InformationBlock/InformationBlock';\nimport '../../fonts.css';\n\nclass LanguageDescrPage extends Component {\n  state = {};\n\n  handleBtnBack = e => {\n    const { history } = this.props;\n    e.preventDefault();\n    history.push('/');\n  };\n\n  addNotification = error => {\n    const { toastManager } = this.props;\n    toastManager.add(error, {\n      appearance: 'error',\n      autoDismiss: true,\n      pauseOnHover: true,\n    });\n  };\n\n  handleBtnStart = async e => {\n    const { setStartTime, fetchTest, currentLanguageId, history } = this.props;\n    e.preventDefault();\n    const tests = await fetchTest(currentLanguageId);\n    if (tests) {\n      this.addNotification('Что-то пошло не так, перезагрузи страницу');\n    } else {\n      setStartTime(Date.now());\n      history.push('/test');\n    }\n  };\n\n  render() {\n    const {\n      languageInfo,\n      languageInfo: {\n        title,\n        description,\n        image,\n        pullQuestions,\n        countQuestions,\n        createdAt,\n        updatedAt,\n      },\n      loading,\n    } = this.props;\n    return (\n      <>\n        {!languageInfo ||\n          (loading && (\n            <div className={styles.loader}>\n              <Loader type=\"Circles\" color=\"#00BFFF\" height=\"100\" width=\"100\" />\n            </div>\n          ))}\n        {languageInfo &&\n          (!loading && (\n            <section className={styles.languageDescrPageContainer}>\n              <StatisticBlock\n                logo={image}\n                questionCount={countQuestions}\n                questionPull={pullQuestions}\n                createdAt={createdAt}\n                updatedAt={updatedAt}\n                onClick={this.handleBtnBack}\n              />\n              <InformationBlock\n                title={title}\n                description={description}\n                onStart={this.handleBtnStart}\n              />\n            </section>\n          ))}\n      </>\n    );\n  }\n}\n\nLanguageDescrPage.propTypes = {\n  languageInfo: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    image: PropTypes.string.isRequired,\n    countQuestions: PropTypes.number.isRequired,\n    pullQuestions: PropTypes.number.isRequired,\n    createdAt: PropTypes.string.isRequired,\n    updatedAt: PropTypes.string,\n  }).isRequired,\n  fetchTest: PropTypes.func.isRequired,\n  setStartTime: PropTypes.func.isRequired,\n  currentLanguageId: PropTypes.string.isRequired,\n  loading: PropTypes.bool.isRequired,\n  toastManager: PropTypes.shape({\n    add: PropTypes.func,\n    remove: PropTypes.func,\n    toasts: PropTypes.array,\n  }).isRequired,\n  history: PropTypes.shape().isRequired,\n};\nconst mapStateToProps = state => ({\n  languageInfo: languageDescrPageSelectors.getLanguageById(state),\n  currentLanguageId: languageDescrPageSelectors.getCurrentLanguageId(state),\n  loading: languageDescrPageSelectors.loading(state),\n  error: languageDescrPageSelectors.error(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchTest: id => dispatch(languageDescrPageOperations.fetchTest(id)),\n  setStartTime: startTime =>\n    dispatch(languageDescrPageActionCreators.startTime(startTime)),\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withToastManager(LanguageDescrPage));\n","import axios from 'axios';\n\nimport {\n  fetchTestStart,\n  fetchTestSuccess,\n  fetchTestError,\n} from './languageDescrPageActionCreators';\n\nexport const fetchTest = id => {\n  return async dispatch => {\n    try {\n      dispatch(fetchTestStart());\n      const response = await axios.get(\n        `https://test.goit.co.ua/api/tests/${id}`,\n      );\n      dispatch(fetchTestSuccess(response.data));\n    } catch (error) {\n      dispatch(fetchTestError(error));\n      return error;\n    }\n    return '';\n  };\n};\nexport const llll = () => null;\n","import { ActionType } from './languageDescrPageActions';\n\nexport const fetchTestStart = () => ({\n  type: ActionType.FETCH_TEST_START,\n});\n\nexport const fetchTestSuccess = test => ({\n  type: ActionType.FETCH_TEST_SUCCESS,\n  payload: {\n    test,\n  },\n});\n\nexport const fetchTestError = error => ({\n  type: ActionType.FETCH_TEST_ERROR,\n  payload: {\n    error,\n  },\n});\nexport const startTime = () => ({\n  type: ActionType.TIME_START,\n  payload: {\n    time: Date.now(),\n  },\n});\nexport const endTime = () => ({\n  type: ActionType.TIME_END,\n  payload: {\n    time: Date.now(),\n  },\n});\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TestExplanation.module.css';\n\nconst TestExplanation = ({ description, onClickNextQuestion }) => (\n  <div className={styles.container}>\n    <div className={styles.innerContainer}>\n      {description && (\n        <Fragment>\n          <p className={styles.title}>Пояснения:</p>\n\n          <p\n            className={styles.text}\n            dangerouslySetInnerHTML={{ __html: description }}\n          />\n        </Fragment>\n      )}\n      {onClickNextQuestion && (\n        <button\n          onClick={onClickNextQuestion}\n          className={styles.button}\n          type=\"submit\"\n        >\n          Ок, дальше\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nTestExplanation.propTypes = {\n  description: PropTypes.string,\n  onClickNextQuestion: PropTypes.func,\n};\nTestExplanation.defaultProps = {\n  onClickNextQuestion: () => null,\n  description: null,\n};\n\nexport default TestExplanation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './BoxShadow.module.css';\n\nconst BoxShadow = ({ children, className, boxShadow }) => {\n  const shadowName = `shadowDepth${boxShadow}`;\n  return <div className={`${className} ${css[shadowName]}`}>{children}</div>;\n};\nBoxShadow.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.object,\n    PropTypes.arrayOf(PropTypes.object),\n  ]).isRequired,\n  boxShadow: PropTypes.number,\n  className: PropTypes.string,\n};\nBoxShadow.defaultProps = {\n  boxShadow: 1,\n  className: '',\n};\n\nexport default BoxShadow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BoxShadow from '../Shared/BoxShadow/BoxShadow';\nimport css from './TestQuestion.module.css';\n\nconst TestQuestion = ({ question }) => {\n  return (\n    <BoxShadow boxShadow={14} className={css.paper}>\n      <p className={css.text} dangerouslySetInnerHTML={{ __html: question }} />\n    </BoxShadow>\n  );\n};\nTestQuestion.propTypes = {\n  question: PropTypes.string,\n};\nTestQuestion.defaultProps = {\n  question: '',\n};\nexport default TestQuestion;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './Button.module.css';\n\nconst Button = ({\n  type = 'button',\n  children,\n  className,\n  variant,\n  handleClick,\n  ...rest\n}) => {\n  const style = css[variant];\n  return (\n    <button\n      type={type}\n      className={`${style} ${className}`}\n      onClick={handleClick}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\nButton.propTypes = {\n  type: PropTypes.string,\n  children: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  variant: PropTypes.oneOf(['contained', 'outlined', 'simple']),\n  handleClick: PropTypes.func,\n};\nButton.defaultProps = {\n  type: 'button',\n  className: '',\n  variant: 'simple',\n  handleClick: () => null,\n};\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// render-props, переключатель\nclass Toggable extends React.Component {\n  state = {\n    isToggle: false,\n  };\n\n  handleToggle = () => this.setState(state => ({ isToggle: !state.isToggle }));\n\n  render() {\n    const { isToggle } = this.state;\n    const { children } = this.props;\n    return children({ isToggle, toggle: this.handleToggle });\n  }\n}\nToggable.propTypes = {\n  children: PropTypes.func.isRequired,\n};\nexport default Toggable;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.getElementById('modal-root');\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    modalRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    modalRoot.removeChild(this.el);\n  }\n\n  render() {\n    const { children } = this.props;\n    return ReactDOM.createPortal(children, this.el);\n  }\n}\nModal.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default Modal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport css from './EndTest.module.css';\nimport Button from '../../Shared/Button/Button';\nimport BoxShadow from '../../Shared/BoxShadow/BoxShadow';\nimport * as selectors from '../../../redux/testPage/testPageSelectors';\nimport { finishTest } from '../../../redux/testPage/testPageOperations';\n\nfunction EndTest({ endTest, continueTest, handleFinishTest, userId }) {\n  const testFinish = e => {\n    handleFinishTest(userId);\n    endTest(e);\n  };\n  return (\n    <div className={css.container}>\n      <BoxShadow boxShadow={6} className={css.modal}>\n        <p className={css.text}>\n          У Вас есть неотвеченные вопросы. Все равно хотите завершить тест?\n        </p>\n        <div className={css.controls}>\n          <Button\n            variant=\"outlined\"\n            handleClick={testFinish}\n            className={css.btn}\n            data-redirect=\"/\"\n          >\n            Да, выйти!\n          </Button>\n          <Button\n            variant=\"simple\"\n            handleClick={continueTest}\n            className={css.btn}\n          >\n            Продолжить тест.\n          </Button>\n        </div>\n      </BoxShadow>\n    </div>\n  );\n}\nEndTest.propTypes = {\n  endTest: PropTypes.func.isRequired,\n  continueTest: PropTypes.func.isRequired,\n  handleFinishTest: PropTypes.func.isRequired,\n  userId: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  userId: selectors.getUserId(state),\n});\nconst mapDispatchToProps = {\n  handleFinishTest: finishTest,\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(EndTest);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport css from './TestControl.module.css';\nimport Button from '../Shared/Button/Button';\nimport Toggable from '../../utils/Toggable';\nimport Modal from '../../utils/Modal';\nimport EndTest from '../Modal/EndTest/EndTest';\n\n// finalResult - нужен для того чтобы изменять поведение кнопки, и ее надпись\n// Посмотреть результат\n// Закончить тест\nconst TestControl = ({ title, current, length, finalResult, history }) => {\n  return (\n    <Toggable>\n      {({ isToggle, toggle }) => {\n        const endTest = e => {\n          history.push(e.target.dataset.redirect);\n        };\n        return (\n          <div className={css.headerTest}>\n            <p className={css.title}>[{title}]</p>\n\n            {finalResult ? (\n              <Button\n                variant=\"outlined\"\n                handleClick={endTest}\n                className={css.btn}\n                data-redirect=\"/result\"\n              >\n                Результат\n              </Button>\n            ) : (\n              <Button\n                variant=\"outlined\"\n                handleClick={toggle}\n                className={css.btn}\n              >\n                Закончить тест\n              </Button>\n            )}\n            <p className={css.orderQuestion}>\n              Вопрос {current}/{length}\n            </p>\n            {isToggle && (\n              <Modal>\n                <EndTest endTest={endTest} continueTest={toggle} />\n              </Modal>\n            )}\n          </div>\n        );\n      }}\n    </Toggable>\n  );\n};\nTestControl.propTypes = {\n  title: PropTypes.string.isRequired,\n  current: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  length: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  finalResult: PropTypes.bool.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  history: PropTypes.object.isRequired,\n};\nexport default withRouter(TestControl);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './NewTestImage.module.css';\n\nconst NewTestImage = ({ desktopImage, mobileImage }) => (\n  <picture>\n    <source media=\"(min-width: 768px)\" srcSet={desktopImage} />\n    <source media=\"(min-width: 1280px)\" srcSet={desktopImage} />\n    <img className={styles.image} src={mobileImage} alt=\"mobileImage\" />\n  </picture>\n);\nNewTestImage.propTypes = {\n  desktopImage: PropTypes.string.isRequired,\n  mobileImage: PropTypes.string.isRequired,\n};\nexport default NewTestImage;\n","/* eslint no-shadow: 0 */\nimport React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport { withToastManager } from 'react-toast-notifications';\nimport PropTypes from 'prop-types';\nimport TestAnswer from '../../components/TestAnswer/TestAnswer';\nimport TestExplanation from '../../components/TestExplanation/TestExplanation';\nimport TestQuestion from '../../components/TestQuestion/TestQuestion';\nimport TestControl from '../../components/TestControl/TestControl';\nimport NewTestImage from '../../components/NewTestImage/NewTestImage';\nimport styles from './TestPage.module.css';\n\nclass TestPage extends Component {\n  state = {\n    userAnswerNumber: null,\n    userId: null,\n    languageTitle: '',\n  };\n\n  componentDidMount() {\n    const { currentQuestion } = this.props;\n    if (currentQuestion) {\n      const { userId, languageTitle } = currentQuestion;\n      this.setState({ userId, languageTitle });\n    }\n  }\n\n  componentDidUpdate() {\n    const { userId, languageTitle } = this.state;\n    if (!userId || !languageTitle) {\n      const { currentQuestion } = this.props;\n      const { userId, languageTitle } = currentQuestion;\n      this.setState({ userId, languageTitle });\n    }\n  }\n\n  scrollTop = () => window.scrollTo({ left: 0, top: 0, behavior: 'smooth' });\n\n  addNotification = error => {\n    const { toastManager } = this.props;\n    toastManager.add(error, {\n      appearance: 'warning',\n      autoDismiss: true,\n      pauseOnHover: true,\n    });\n  };\n\n  onChangeUserAnswer = e => {\n    this.setState({ userAnswerNumber: Number(e.target.dataset.number) });\n\n    const userAnswerNumber = Number(e.target.dataset.number);\n    const { questionNumber, question } = this.props.currentQuestion;\n    const { questionId } = question;\n    const questionAnswer = { questionNumber, questionId, userAnswerNumber };\n    this.props.onChangeAnswer(questionAnswer);\n  };\n\n  onClickAnswer = () => {\n    const { questionNumber, question } = this.props.currentQuestion;\n    const { questionId } = question;\n\n    const { userAnswerNumber, userId } = this.state;\n\n    if (userAnswerNumber) {\n      const userAnswer = {\n        questionNumber,\n        questionId,\n        userAnswerNumber,\n      };\n      this.props.fetchResultAnswer(userId, userAnswer);\n      this.setState({ userAnswerNumber: null });\n    } else {\n      this.addNotification('Сперва выбери ответ, а потом жми на кнопку ;)');\n    }\n  };\n\n  onClickNextQuestion = () => {\n    const {\n      rewriteCurrentQuestion,\n      resetFields,\n      history,\n      finalResult,\n    } = this.props;\n\n    if (finalResult) {\n      history.push('/result');\n      this.scrollTop();\n      return;\n    }\n    rewriteCurrentQuestion();\n    resetFields();\n    this.scrollTop();\n  };\n\n  onClickSkipQuestion = () => {\n    const { questionNumber, question } = this.props.currentQuestion;\n    const { questionId } = question;\n    const { userId } = this.state;\n    const questionSkip = { questionNumber, questionId };\n    this.props.fetchSkipTheQuestion(userId, questionSkip);\n    this.props.resetUserAnswer();\n    this.scrollTop();\n  };\n\n  render() {\n    const { currentQuestion, resultAnswered } = this.props;\n    const { languageTitle } = this.state;\n    let desktopImage;\n    let mobileImage;\n    if (currentQuestion && currentQuestion.question.image) {\n      desktopImage = `https://test.goit.co.ua/images/${currentQuestion.question.image}`;\n      mobileImage = `https://test.goit.co.ua/images/${currentQuestion.question.imageMobile}`;\n    }\n    return (\n      <>\n        {!currentQuestion && (\n          <div className={styles.loader}>\n            <Loader type=\"Puff\" color=\"#00BFFF\" height=\"100\" width=\"100\" />\n          </div>\n        )}\n\n        {currentQuestion && (\n          <>\n            <div className={styles.testPageContainer}>\n              <div className={styles.container}>\n                <TestControl\n                  title={languageTitle}\n                  current={currentQuestion.questionNumber}\n                  finalResult={false}\n                  length={currentQuestion.allQuestionsCount}\n                />\n                <TestQuestion\n                  question={currentQuestion.question.questionText}\n                />\n\n                {currentQuestion.question.image && (\n                  <NewTestImage\n                    desktopImage={desktopImage}\n                    mobileImage={mobileImage}\n                  />\n                )}\n                <TestAnswer\n                  questions={currentQuestion.question.answers}\n                  onChangeUserAnswer={this.onChangeUserAnswer}\n                  onClickAnswer={this.onClickAnswer}\n                  onClickSkipQuestion={this.onClickSkipQuestion}\n                  resultAnswer={resultAnswered}\n                />\n                {resultAnswered && (\n                  <TestExplanation\n                    onClickNextQuestion={this.onClickNextQuestion}\n                    description={resultAnswered.questionExplanation}\n                  />\n                )}\n              </div>\n\n              {resultAnswered &&\n                (resultAnswered.explanation &&\n                resultAnswered.explanation.length > 100 ? (\n                  <div className={styles.bigBackground} />\n                ) : (\n                  <div className={styles.background} />\n                ))}\n              {!resultAnswered && <div className={styles.background} />}\n            </div>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nTestPage.propTypes = {\n  fetchResultAnswer: PropTypes.func.isRequired,\n  fetchSkipTheQuestion: PropTypes.func.isRequired,\n  onChangeAnswer: PropTypes.func.isRequired,\n  resetUserAnswer: PropTypes.func.isRequired,\n  rewriteCurrentQuestion: PropTypes.func.isRequired,\n  resetFields: PropTypes.func.isRequired,\n  resultAnswered: PropTypes.oneOfType([\n    PropTypes.shape({\n      rightAnswer: PropTypes.number,\n      userAnswer: PropTypes.number,\n      userAnswerCorrectly: PropTypes.bool,\n      explanation: PropTypes.string,\n    }),\n    PropTypes.bool,\n  ]).isRequired,\n  currentQuestion: PropTypes.shape({\n    questionNumber: PropTypes.number,\n    languageTitle: PropTypes.string,\n    allQuestionsCount: PropTypes.number,\n    question: PropTypes.shape({\n      questionId: PropTypes.string,\n      answers: PropTypes.array,\n      questionText: PropTypes.string,\n      image: PropTypes.string,\n      imageMobile: PropTypes.string,\n    }),\n    userId: PropTypes.string,\n  }),\n  userId: PropTypes.string.isRequired,\n  finalResult: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  toastManager: PropTypes.shape({\n    add: PropTypes.func,\n    remove: PropTypes.func,\n    toasts: PropTypes.array,\n  }).isRequired,\n};\n\nTestPage.defaultProps = {\n  currentQuestion: null,\n  finalResult: null,\n};\n\nexport default withToastManager(TestPage);\n","import { connect } from 'react-redux';\nimport TestPage from './TestPage';\nimport * as TestPageActions from '../../redux/testPage/testPageActions';\nimport * as TestPageOperations from '../../redux/testPage/testPageOperations';\nimport * as TestPageSelectors from '../../redux/testPage/testPageSelectors';\nimport { store } from '../../redux/store';\n\nconst { dispatch, getState } = store;\n\nconst mapStateToProps = state => ({\n  currentQuestion: TestPageSelectors.getCurrentQuestion(state),\n  resultAnswered: TestPageSelectors.getResultAnswer(state),\n  userId: TestPageSelectors.getUserId(state),\n  finalResult: TestPageSelectors.finalResult(state),\n});\nconst mapDispatchToProps = {\n  fetchResultAnswer: TestPageOperations.fetchResultAnswer,\n  onChangeAnswer: userAnswer =>\n    dispatch(TestPageActions.changeUserAnswer(userAnswer)),\n  rewriteCurrentQuestion: () => () =>\n    dispatch(TestPageActions.rewriteCurrentQuestion(getState().nextQuestion)),\n  resetFields: () => () => {\n    dispatch(TestPageActions.resetResultAnswer());\n    dispatch(TestPageActions.resetUserAnswer());\n    dispatch(TestPageActions.resetNextQuestion());\n  },\n  resetUserAnswer: () => dispatch(TestPageActions.resetUserAnswer()),\n  fetchSkipTheQuestion: TestPageOperations.fetchSkipTheQuestion,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(TestPage);\n","import React from 'react';\nimport ReactMinimalPieChart from 'react-minimal-pie-chart';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport style from './ResultDiagram.module.css';\n\nconst ResultDiagramm = ({\n  allQuestionsCount,\n  rightAnswered,\n  languageTitle,\n  totalTime,\n  rightAnsweredInPercentage,\n}) => {\n  const wishes = percentage => {\n    if (percentage <= 25) return 'Рандом прошел бы этот тест лучше(((';\n    if (percentage > 25 && percentage <= 50)\n      return 'Ну такое... Закрывай, пока никто не увидел';\n    if (percentage > 50 && percentage <= 75)\n      return 'Ты на правильном пути! Не останавливайся';\n    if (percentage > 75 && percentage <= 99)\n      return 'Красавчик! Но можно лучше)))';\n    return \"Идеально! You're the BEST!\";\n  };\n  return (\n    <div className={style.container}>\n      <h2 className={style.head}>\n        Результаты теста &ldquo;{languageTitle}&rdquo;\n      </h2>\n      <div className={style.diagramm}>\n        <ReactMinimalPieChart\n          data={[\n            {\n              title: 'Correct',\n              value: rightAnsweredInPercentage,\n              color: '#ff6c00',\n            },\n            {\n              title: 'Incorrect',\n              value: 100 - rightAnsweredInPercentage,\n              color: '#8b92ab',\n            },\n          ]}\n          lineWidth={15}\n        />\n        <span className={style.digrammPercentage}>\n          {Math.round(rightAnsweredInPercentage)}%\n        </span>\n      </div>\n      <p className={style.wishes}>{wishes(rightAnsweredInPercentage)}</p>\n      <p className={style.statistics}>\n        <span className={style.bracket}>[ </span>Правильных ответов{' '}\n        <span className={style.innerNumber}>{rightAnswered}</span>\n        <span className={style.bracket}> ]</span>\n      </p>\n      <p className={style.statistics}>\n        <span className={style.bracket}>[ </span>Всего вопросов{' '}\n        <span className={style.innerNumber}>{allQuestionsCount}</span>\n        <span className={style.bracket}> ]</span>\n      </p>\n      <p className={style.statistics}>\n        <span className={style.bracket}>[ </span>Время{' '}\n        <span className={style.innerNumber}>{totalTime} мин</span>\n        <span className={style.bracket}> ]</span>\n      </p>\n      <Link className={style.link} to=\"/\">\n        Пройти еще раз\n      </Link>\n    </div>\n  );\n};\n\nResultDiagramm.defaultProps = {\n  allQuestionsCount: 25,\n  rightAnswered: 0,\n  languageTitle: 'Java',\n  rightAnsweredInPercentage: 0,\n};\n\nResultDiagramm.propTypes = {\n  allQuestionsCount: PropTypes.number,\n  rightAnswered: PropTypes.number,\n  languageTitle: PropTypes.string,\n  totalTime: PropTypes.string.isRequired,\n  rightAnsweredInPercentage: PropTypes.number,\n};\n\nexport default ResultDiagramm;\n","export const getQuestions = state => state.finalResult.questions;\nexport const getLanguageTitle = state => state.finalResult.languageTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as allTestContainerSelectors from '../../redux/allTestContainer/allTestContainerSelectors';\nimport TestQuestion from '../TestQuestion/TestQuestion';\nimport TestAnswer from '../TestAnswer/TestAnswer';\nimport TestExplanation from '../TestExplanation/TestExplanation';\nimport styles from './AllTestContainer.module.css';\nimport NewTestImage from '../NewTestImage/NewTestImage';\n\nconst AllTestContainer = ({ questions }) =>\n  questions.map((item, i) => (\n    <div className={styles.item} key={item.questionId}>\n      <TestQuestion question={item.questionText} />\n      {item.image && (\n        <NewTestImage\n          desktopImage={`https://test.goit.co.ua/images/${item.image}`}\n          mobileImage={`https://test.goit.co.ua/images/${item.imageMobile}`}\n        />\n      )}\n      <TestAnswer\n        questions={item.answers}\n        resultAnswer={{\n          answerCorrectly: item.userAnswerCorrectly,\n          rightAnswer: item.rightAnswer,\n          userAnswer: item.userAnswer,\n        }}\n      />\n      <TestExplanation\n        description={item.explanation || ''}\n        onClickNextQuestion={null}\n      />\n      {!(questions.length - 1 === i) && <span className={styles.span} />}\n    </div>\n  ));\nAllTestContainer.propTypes = {\n  questions: PropTypes.arrayOf(PropTypes.shape().isRequired).isRequired,\n  languageTitle: PropTypes.string.isRequired,\n  code: PropTypes.string,\n  explanation: PropTypes.string,\n};\nAllTestContainer.defaultProps = {\n  code: '',\n  explanation: '',\n};\nconst mapStateToProps = state => ({\n  questions: allTestContainerSelectors.getQuestions(state),\n  languageTitle: allTestContainerSelectors.getLanguageTitle(state),\n});\nexport default connect(\n  mapStateToProps,\n  null,\n)(AllTestContainer);\n","export const getAllQuestionsCount = state =>\n  state.finalResult.allQuestionsCount;\nexport const getLanguageTitle = state => state.finalResult.languageTitle;\nexport const getUserRightAnswered = state =>\n  state.finalResult.userRightAnswered;\nexport const getUserRightAnsweredInPercentage = state =>\n  state.finalResult.userRightAnsweredInPercentage;\nexport const getFinalRsult = state => state.finalResult;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport * as actions from '../../redux/languageDescrPage/languageDescrPageActionCreators';\nimport * as selectors from '../../redux/languageDescrPage/languageDescrPageSelectors';\nimport ResultDiagramm from '../../components/ResultDiagram/ResultDiagram';\nimport css from './ResultPage.module.css';\nimport AllTestContainer from '../../components/AllTestContainer/AllTestContainer';\nimport * as selector from '../../redux/fakeReducer';\n\nclass ResultPage extends Component {\n  componentDidMount() {\n    const { setEndTime, endTime } = this.props;\n    if (!endTime) setEndTime();\n  }\n\n  getMinutes() {\n    const { startTime, endTime } = this.props;\n    const delta = endTime - startTime;\n    const day = moment(new Date(delta));\n    return day.format('m');\n  }\n\n  render() {\n    const {\n      endTime,\n      allQuestionsCount,\n      languageTitle,\n      rightAnswered,\n      rightAnsweredInPercentage,\n      finalResult,\n    } = this.props;\n    if (!finalResult) return <Redirect to=\"/\" />;\n    if (!endTime) return null;\n    return (\n      <>\n        <div className={css.container}>\n          <ResultDiagramm\n            allQuestionsCount={allQuestionsCount}\n            languageTitle={languageTitle}\n            rightAnswered={rightAnswered}\n            rightAnsweredInPercentage={rightAnsweredInPercentage}\n            totalTime={this.getMinutes()}\n          />\n          <AllTestContainer />\n        </div>\n        <div className={css.relative}>\n          <div className={css.background} />\n        </div>\n      </>\n    );\n  }\n}\n\nResultPage.propTypes = {\n  startTime: PropTypes.number.isRequired,\n  endTime: PropTypes.number,\n  setEndTime: PropTypes.func.isRequired,\n  allQuestionsCount: PropTypes.number.isRequired,\n  languageTitle: PropTypes.string.isRequired,\n  rightAnswered: PropTypes.number.isRequired,\n  rightAnsweredInPercentage: PropTypes.number.isRequired,\n  finalResult: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n};\nResultPage.defaultProps = {\n  endTime: null,\n  finalResult: false,\n};\nconst mapDispatchToProps = {\n  setEndTime: actions.endTime,\n};\nconst mapStateToProps = state => ({\n  startTime: selectors.startTime(state),\n  endTime: selectors.endTime(state),\n  allQuestionsCount: selector.getAllQuestionsCount(state),\n  languageTitle: selector.getLanguageTitle(state),\n  rightAnswered: selector.getUserRightAnswered(state),\n  rightAnsweredInPercentage: selector.getUserRightAnsweredInPercentage(state),\n  finalResult: selector.getFinalRsult(state),\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ResultPage);\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { ToastProvider } from 'react-toast-notifications';\nimport StartPage from './pages/StartPage/StartPage';\nimport LanguageDescrPage from './pages/LanguageDescrPage/LanguageDescrPage';\nimport TestPage from './pages/TestPage/TestPageContainer';\nimport ResultPage from './pages/ResultPage/ResultPage';\n// import css from './App.module.css';\n\nfunction App() {\n  return (\n    <ToastProvider placement=\"bottom-right\">\n      <>\n        <Router>\n          <Route exact path=\"/\" component={StartPage} />\n          <Route exact path=\"/language_descr\" component={LanguageDescrPage} />\n          <Route exact path=\"/test\" component={TestPage} />\n          <Route exact path=\"/result\" component={ResultPage} />\n        </Router>\n      </>\n    </ToastProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n/* eslint-disable */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        /* eslint no-use-before-define:0 */\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      /* eslint no-param-reassign:0 */\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './fonts.css';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <HashRouter basename=\"/programming-language-tests\">\n        <App />\n      </HashRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"StartPage_section__3QrtN\",\"sectionAbout\":\"StartPage_sectionAbout__2UPbG\",\"blockquote\":\"StartPage_blockquote__2M68-\",\"lduo\":\"StartPage_lduo__1Jehm\",\"autor\":\"StartPage_autor__u5IaR\",\"organization\":\"StartPage_organization__2xEya\",\"langList\":\"StartPage_langList__2sotZ\",\"loader\":\"StartPage_loader__13gtV\",\"error\":\"StartPage_error__17dkh\",\"sectionText\":\"StartPage_sectionText__194f8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"LanguageCard_card__2y-Ld\",\"link\":\"LanguageCard_link__KW8Bs\",\"shadow\":\"LanguageCard_shadow__3fQox\",\"logo\":\"LanguageCard_logo__2Szcz\",\"lang\":\"LanguageCard_lang__3VPyD\",\"questions\":\"LanguageCard_questions__2ZxHM\",\"emptyImg\":\"LanguageCard_emptyImg__3AzZF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EndTest_container__2AOoL\",\"modal\":\"EndTest_modal__2XNAg\",\"text\":\"EndTest_text__1NarC\",\"controls\":\"EndTest_controls__1q1DF\",\"btn\":\"EndTest_btn__3Z8Xv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TestPage_container__oiHGv\",\"loader\":\"TestPage_loader__IKkm-\",\"testPageContainer\":\"TestPage_testPageContainer__gry3g\",\"background\":\"TestPage_background__39Geu\",\"bigBackground\":\"TestPage_bigBackground__95un_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ResultDiagram_container__1jB-T\",\"head\":\"ResultDiagram_head__1H78o\",\"diagramm\":\"ResultDiagram_diagramm__1PNIe\",\"digrammPercentage\":\"ResultDiagram_digrammPercentage__28fAr\",\"wishes\":\"ResultDiagram_wishes__1HFSS\",\"statistics\":\"ResultDiagram_statistics__38sse\",\"bracket\":\"ResultDiagram_bracket__fJL7a\",\"innerNumber\":\"ResultDiagram_innerNumber__2w5fg\",\"link\":\"ResultDiagram_link__TdlI0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TestExplanation_container__29vat\",\"title\":\"TestExplanation_title__1HA-r\",\"text\":\"TestExplanation_text__FpmmO\",\"button\":\"TestExplanation_button__2TQLj\",\"innerContainer\":\"TestExplanation_innerContainer__1dNAM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerTest\":\"TestControl_headerTest__1k7-J\",\"title\":\"TestControl_title__2FLPo\",\"orderQuestion\":\"TestControl_orderQuestion__2mmbG\",\"btn\":\"TestControl_btn__3m6tr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"firstBlock\":\"StatisticBlock_firstBlock__1k_nR\",\"firstBlockImage\":\"StatisticBlock_firstBlockImage__3QZfg\",\"firstBlockTextInfo\":\"StatisticBlock_firstBlockTextInfo__1LKuY\",\"btnGoBack\":\"StatisticBlock_btnGoBack__1Elep\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"secondBlock\":\"InformationBlock_secondBlock__1HqEg\",\"secondBlockTitle\":\"InformationBlock_secondBlockTitle__ZI7T9\",\"secondBlockDescription\":\"InformationBlock_secondBlockDescription__pLyPZ\",\"btnStartTest\":\"InformationBlock_btnStartTest__1lPNX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"relative\":\"ResultPage_relative__3sfhZ\",\"container\":\"ResultPage_container__3DJY_\",\"background\":\"ResultPage_background__2dyb5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TestAnswer_container__1E4gm\",\"label\":\"TestAnswer_label__3-FvP\",\"labelCorrect\":\"TestAnswer_labelCorrect__3NGzX\",\"labelIncorrect\":\"TestAnswer_labelIncorrect__1Ks1l\",\"img\":\"TestAnswer_img__1VX3B\",\"inputWrapper\":\"TestAnswer_inputWrapper__3S225\",\"input\":\"TestAnswer_input__N7moV\",\"mobileContainerButton\":\"TestAnswer_mobileContainerButton__15lbf\",\"buttonContainer\":\"TestAnswer_buttonContainer__1LnuU\",\"tabletContainerButton\":\"TestAnswer_tabletContainerButton__2XCHg\",\"button\":\"TestAnswer_button__1PY4u\",\"buttonConfirm\":\"TestAnswer_buttonConfirm__3KEm8 TestAnswer_button__1PY4u\",\"buttonSkip\":\"TestAnswer_buttonSkip__2MCtR TestAnswer_button__1PY4u\",\"wrapperImgInput\":\"TestAnswer_wrapperImgInput__1I-HD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"languageDescrPageContainer\":\"LanguageDescrPage_languageDescrPageContainer__1x9LM\",\"loader\":\"LanguageDescrPage_loader__3u0z1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textBlock_item\":\"TextBlockItem_textBlock_item__2oY1b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paper\":\"TestQuestion_paper__1jyR6\",\"text\":\"TestQuestion_text__3L8PV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"AllTestContainer_item__2iO2q\",\"span\":\"AllTestContainer_span__1qr6x\"};","module.exports = __webpack_public_path__ + \"static/media/happyCat1.3aab5c4a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/happyCat2.ec2e6309.png\";","module.exports = __webpack_public_path__ + \"static/media/happyCat3.34d25416.png\";","module.exports = __webpack_public_path__ + \"static/media/pensiveСat1.37e1338f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pensiveCat2.0560620b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shadowDepth1\":\"BoxShadow_shadowDepth1__-7CdX\",\"shadowDepth2\":\"BoxShadow_shadowDepth2__1Ecij\",\"shadowDepth3\":\"BoxShadow_shadowDepth3__Xaouy\",\"shadowDepth4\":\"BoxShadow_shadowDepth4__ubtpE\",\"shadowDepth5\":\"BoxShadow_shadowDepth5__124iZ\",\"shadowDepth6\":\"BoxShadow_shadowDepth6__NMFdc\",\"shadowDepth7\":\"BoxShadow_shadowDepth7__3Z2XQ\",\"shadowDepth8\":\"BoxShadow_shadowDepth8__2LG68\",\"shadowDepth9\":\"BoxShadow_shadowDepth9__5z0BG\",\"shadowDepth10\":\"BoxShadow_shadowDepth10__p8qWk\",\"shadowDepth11\":\"BoxShadow_shadowDepth11__2czx7\",\"shadowDepth12\":\"BoxShadow_shadowDepth12__1tuaX\",\"shadowDepth13\":\"BoxShadow_shadowDepth13__1Nq68\",\"shadowDepth14\":\"BoxShadow_shadowDepth14__2JspT\",\"shadowDepth15\":\"BoxShadow_shadowDepth15__1f9mG\",\"shadowDepth16\":\"BoxShadow_shadowDepth16__3YRvJ\",\"shadowDepth17\":\"BoxShadow_shadowDepth17__2QfE2\",\"shadowDepth18\":\"BoxShadow_shadowDepth18__3Ia4c\",\"shadowDepth19\":\"BoxShadow_shadowDepth19__1U6K7\",\"shadowDepth20\":\"BoxShadow_shadowDepth20__2nk6C\",\"shadowDepth21\":\"BoxShadow_shadowDepth21__3ZkGy\",\"shadowDepth22\":\"BoxShadow_shadowDepth22__3Xys3\",\"shadowDepth23\":\"BoxShadow_shadowDepth23__2puts\",\"shadowDepth24\":\"BoxShadow_shadowDepth24__2pr24\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"simple\":\"Button_simple__2e5HF\",\"contained\":\"Button_contained__394oz Button_simple__2e5HF\",\"outlined\":\"Button_outlined__vKBo6 Button_simple__2e5HF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"NewTestImage_image__un1GE\"};"],"sourceRoot":""}